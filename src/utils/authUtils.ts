
import { User } from "@/types/auth";
import { toast } from "@/hooks/use-toast";

export const LOCAL_STORAGE_USER_KEY = "hug-mind-self-user";

export const getStoredUser = (): User | null => {
  const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);
  return storedUser ? JSON.parse(storedUser) : null;
};

export const storeUser = (user: User): void => {
  localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));
};

export const removeUser = (): void => {
  localStorage.removeItem(LOCAL_STORAGE_USER_KEY);
  localStorage.removeItem("hug-mind-self-cohesion");
  localStorage.removeItem("hug-mind-self-tasks");
};

export const isValidAdmin = (email: string, password: string): boolean => {
  return email === "pizchy.wachida@gmail.com" && password === "Pizchy638601";
};

export const createMockUser = (email: string, name: string, isAdmin: boolean): User => {
  return {
    id: `user-${Date.now()}`,
    email,
    name: name || email.split('@')[0],
    createdAt: new Date().toISOString(),
    isAdmin
  };
};

export const showAuthToast = (
  type: "success" | "error",
  action: "login" | "signup" | "logout" | "reset" | "forgot" | "update"
): void => {
  const messages = {
    success: {
      login: { title: "р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И", description: "р╕вр╕┤р╕Щр╕Фр╕╡р╕Хр╣Йр╕нр╕Щр╕гр╕▒р╕Ър╕Бр╕ер╕▒р╕Ър╕бр╕▓! ЁЯМЯ" },
      signup: { title: "р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╣Ар╕гр╣Зр╕И", description: "р╕вр╕┤р╕Щр╕Фр╕╡р╕Хр╣Йр╕нр╕Щр╕гр╕▒р╕Ър╕кр╕╣р╣И Hug Mind Self! ЁЯОЙ" },
      logout: { title: "р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И", description: "р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╕Ър╕гр╕┤р╕Бр╕▓р╕г р╕Бр╕ер╕▒р╕Ър╕бр╕▓р╣Гр╕лр╕бр╣Ир╣Ар╕гр╣Зр╕зр╣Ж р╕Щр╕╡р╣Йр╕Щр╕░! ЁЯСЛ" },
      reset: { title: "р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И", description: "р╕Др╕╕р╕Ур╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕Фр╣Йр╕зр╕вр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Гр╕лр╕бр╣Ир╣Др╕Фр╣Йр╣Бр╕ер╣Йр╕з" },
      forgot: { title: "р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Бр╕ер╣Йр╕з", description: "р╣Вр╕Ыр╕гр╕Фр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕нр╕╡р╣Ар╕бр╕ер╕Вр╕нр╕Зр╕Др╕╕р╕Ур╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ" },
      update: { title: "р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╣Вр╕Ыр╕гр╣Др╕Яр╕ер╣Мр╕кр╕│р╣Ар╕гр╣Зр╕И", description: "р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕нр╕Зр╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з" }
    },
    error: {
      login: { title: "р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕ер╣Йр╕бр╣Ар╕лр╕ер╕з", description: "р╕нр╕╡р╣Ар╕бр╕ер╕лр╕гр╕╖р╕нр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З" },
      signup: { title: "р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з", description: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З" },
      reset: { title: "р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з", description: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З" },
      forgot: { title: "р╕кр╣Ир╕Зр╕нр╕╡р╣Ар╕бр╕ер╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з", description: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З" },
      update: { title: "р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╣Вр╕Ыр╕гр╣Др╕Яр╕ер╣Мр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з", description: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З" }
    }
  };

  const { title, description } = messages[type][action];
  
  toast({
    title,
    description,
    variant: type === "error" ? "destructive" : "default",
  });
};
