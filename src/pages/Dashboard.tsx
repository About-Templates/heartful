
import { useEffect, useState } from "react";
import { useAuth } from "@/contexts/AuthContext";
import { useCohesion } from "@/contexts/CohesionContext";
import { useTasks } from "@/contexts/TasksContext";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { useNavigate } from "react-router-dom";
import { Heart, Activity, CheckCircle, Calendar, Plus, ArrowRight } from "lucide-react";

const Dashboard = () => {
  const { user } = useAuth();
  const { cohesions, getCurrentStreak, getLongestStreak } = useCohesion();
  const { tasks } = useTasks();
  const navigate = useNavigate();
  const [quote, setQuote] = useState("");
  
  // List of Thai motivational quotes
  const quotes = [
    "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏û‡∏±‡∏ô‡πÑ‡∏°‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡πâ‡∏≤‡∏ß‡πÅ‡∏£‡∏Å",
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á",
    "‡∏ó‡∏∏‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏°‡∏µ‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å ‡∏≠‡∏¢‡πà‡∏≤‡∏¢‡∏≠‡∏°‡πÅ‡∏û‡πâ",
    "‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤",
    "‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏π‡∏Å‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ñ‡∏∑‡∏≠ 20 ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏±‡∏î‡∏°‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ",
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏Ñ‡∏∑‡∏≠‡∏û‡∏•‡∏±‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ",
    "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏à‡∏£‡∏¥‡∏á",
    "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏≥",
    "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏≤‡∏ß‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏´‡∏ô‡∏∂‡πà‡∏á ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô",
    "‡∏•‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ"
  ];
  
  // Get a random quote on component mount
  useEffect(() => {
    const randomIndex = Math.floor(Math.random() * quotes.length);
    setQuote(quotes[randomIndex]);
  }, []);
  
  // Calculate completed tasks for today
  const today = new Date().toISOString().split('T')[0];
  const completedTasks = tasks.filter(task => task.completed).length;
  const totalTasks = tasks.length;
  const completionPercentage = totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;

  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      
      <main className="flex-1 py-8 px-6 md:px-8 bg-background">
        <div className="max-w-7xl mx-auto">
          {/* Welcome section */}
          <div className="mb-8">
            <h1 className="text-3xl font-bold mb-2">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, {user?.name}! üëã</h1>
            <p className="text-muted-foreground">
              ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
            </p>
          </div>

          {/* Quote of the day */}
          <Card className="mb-8 bg-gradient-to-r from-theme-purple to-theme-purple-dark text-white">
            <CardContent className="pt-6">
              <blockquote className="text-xl md:text-2xl italic font-medium text-center px-4 py-2">
                "{quote}"
              </blockquote>
              <p className="text-center mt-4 text-white/80">‡∏Ñ‡∏≥‡∏Ñ‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</p>
            </CardContent>
          </Card>
          
          {/* Dashboard grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-10">
            {/* Task progress card */}
            <Card className="card-hover">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center text-lg font-medium">
                  <CheckCircle className="mr-2 h-5 w-5 text-theme-purple" />
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <Progress value={completionPercentage} className="h-2" />
                  <div className="flex justify-between text-sm text-muted-foreground">
                    <span>‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß {completedTasks} ‡∏à‡∏≤‡∏Å {totalTasks} ‡∏á‡∏≤‡∏ô</span>
                    <span>{completionPercentage}%</span>
                  </div>
                  <Button 
                    variant="outline" 
                    className="w-full mt-4 border-theme-purple text-theme-purple dark:border-theme-purple dark:text-theme-purple"
                    onClick={() => navigate("/tasks")}
                  >
                    ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    <ArrowRight className="ml-2 h-4 w-4" />
                  </Button>
                </div>
              </CardContent>
            </Card>
            
            {/* Today's habit card */}
            <Card className="card-hover">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center text-lg font-medium">
                  <Heart className="mr-2 h-5 w-5 text-theme-purple" />
                  ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {cohesions.length > 0 ? (
                    <div className="space-y-4">
                      {cohesions.slice(0, 3).map((cohesion) => (
                        <div key={cohesion.id} className="flex justify-between items-center">
                          <div className="flex items-center">
                            <div className={`w-3 h-3 rounded-full bg-theme-${cohesion.color} mr-3`}></div>
                            <span className="text-foreground">{cohesion.name}</span>
                          </div>
                          <span className="text-sm font-medium">
                            {getCurrentStreak(cohesion.id)} ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô
                          </span>
                        </div>
                      ))}
                      <Button 
                        variant="outline" 
                        className="w-full mt-2 border-theme-purple text-theme-purple dark:border-theme-purple dark:text-theme-purple"
                        onClick={() => navigate("/cohesion")}
                      >
                        ‡∏î‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        <ArrowRight className="ml-2 h-4 w-4" />
                      </Button>
                    </div>
                  ) : (
                    <div className="text-center py-4">
                      <p className="text-muted-foreground mb-4">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°</p>
                      <Button 
                        variant="outline" 
                        className="border-theme-purple text-theme-purple dark:border-theme-purple dark:text-theme-purple"
                        onClick={() => navigate("/cohesion")}
                      >
                        <Plus className="mr-2 h-4 w-4" />
                        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                      </Button>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
            
            {/* Stats card */}
            <Card className="card-hover">
              <CardHeader className="pb-2">
                <CardTitle className="flex items-center text-lg font-medium">
                  <Activity className="mr-2 h-5 w-5 text-theme-purple" />
                  ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-secondary p-4 rounded-lg text-center">
                      <p className="text-3xl font-bold text-theme-purple">
                        {cohesions.length}
                      </p>
                      <p className="text-sm text-muted-foreground">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                    </div>
                    <div className="bg-secondary p-4 rounded-lg text-center">
                      <p className="text-3xl font-bold text-theme-purple">
                        {cohesions.reduce((max, c) => {
                          const longest = getLongestStreak(c.id);
                          return longest > max ? longest : max;
                        }, 0)}
                      </p>
                      <p className="text-sm text-muted-foreground">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</p>
                    </div>
                  </div>
                  <Button 
                    variant="outline" 
                    className="w-full mt-2 border-theme-purple text-theme-purple dark:border-theme-purple dark:text-theme-purple"
                    onClick={() => navigate("/stats")}
                  >
                    ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                    <ArrowRight className="ml-2 h-4 w-4" />
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
          
          {/* Calendar section */}
          <Card className="mb-8 card-hover">
            <CardHeader>
              <CardTitle className="flex items-center text-xl font-medium">
                <Calendar className="mr-2 h-6 w-6 text-theme-purple" />
                ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-center py-8 text-muted-foreground">
                <p className="mb-4">‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</p>
                <Button 
                  variant="outline" 
                  className="border-theme-purple text-theme-purple dark:border-theme-purple dark:text-theme-purple"
                >
                  ‡∏î‡∏π‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      
      <Footer />
    </div>
  );
};

export default Dashboard;
